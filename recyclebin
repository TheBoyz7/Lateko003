slang page





<section>
    <main>
        <h1>Unleash your inner speaker. Find your slang.</h1>
        <p>Dive into the hottest lingo and express yourself like a boss. Search, learn, and rock the Lateko swag.</p>

        <form id="search-form">
            <input type="text" id="search-input" placeholder="Enter slang to find">
            <button type="submit"><i class="fa fa-search"></i> Find It</button>
        </form>

        <div id="slang-details" style="display: none;">
            <p id="selected-slang"></p>
            <p id="slang-definition"></p>
            <p id="slang-credit"></p>
            <button id="view-tshirts-btn" onclick="viewTShirts()">View T-Shirts</button>
        </div>

        <div id="add-slang-message" style="display: none;">
            <p>Slang doesn't exist. Add it now?</p>
            <button id="add-slang-btn" onclick="addSlang()">Add Slang</button>
        </div>

        <ul id="slang-list"></ul>

        <div class="t-shirt-popup">
            <img src="" alt="T-shirt image">
            <button class="close-popup">Close</button>
        </div>
    </main>

    <script>
        // Select necessary elements
        const searchForm = document.getElementById('search-form');
        const searchInput = document.getElementById('search-input');
        const slangList = document.getElementById('slang-list');
        const slangDetails = document.getElementById('slang-details');
        const selectedSlang = document.getElementById('selected-slang');
        const slangDefinition = document.getElementById('slang-definition');
        const slangCredit = document.getElementById('slang-credit');
        const viewTShirtsBtn = document.getElementById('view-tshirts-btn');
        const addSlangMessage = document.getElementById('add-slang-message');
        const addSlangBtn = document.getElementById('add-slang-btn');
        const tShirtPopup = document.querySelector('.t-shirt-popup');
        const closePopupButton = document.querySelector('.close-popup');
        let results; // Declare results globally

        // Simulate search data (replace with database calls)
        const slangData = {
            "Naija": { definition: "Nigerian slang for 'Nigeria'", credit: "Contributor A" },
            "Chop Life": { definition: "To enjoy life to the fullest", credit: "Contributor B" },
            "Jand": { definition: "Abroad, specifically referring to Western countries", credit: "Contributor C" },
            // Add more slang terms and definitions here
        };

        // Handle form submission
        searchForm.addEventListener('submit', (event) => {
            event.preventDefault(); // Prevent default form submission

            const searchTerm = searchInput.value.toLowerCase();
            results = Object.entries(slangData)
                .filter(([slangTerm]) => slangTerm.toLowerCase().includes(searchTerm))
                .map(([slangTerm, { definition, credit }]) => ({ slangTerm, definition, credit }));

            displaySearchResults(results);
        });

        // Display search results
        function displaySearchResults(results) {
            slangList.innerHTML = ''; // Clear previous results

            if (results.length === 0) {
                slangDetails.style.display = 'none'; // Hide the details block
                addSlangMessage.style.display = 'block'; // Show the "Add Slang" message
                return;
            }

            slangDetails.style.display = 'block'; // Show the details block
            addSlangMessage.style.display = 'none'; // Hide the "Add Slang" message

            results.forEach(({ slangTerm, definition, credit }) => {
                const slangItem = document.createElement('li');
                slangItem.classList.add('slang-item');
                slangItem.textContent = slangTerm;

                slangItem.addEventListener('click', () => {
                    showSlangDetails({ slangTerm, definition, credit });
                });

                slangList.appendChild(slangItem);
            });
        }

        // Function to show slang details when selected
        function showSlangDetails({ slangTerm, definition, credit }) {
            selectedSlang.textContent = `Slang Term: ${slangTerm}`;
            slangDefinition.textContent = `Definition: ${definition}`;
            slangCredit.textContent = `Credit: ${credit}`;
            viewTShirtsBtn.style.display = 'block'; // Show the "View T-Shirts" button
            closeTShirtPopup();
        }

        // Function to handle "View T-Shirts" button click
        function viewTShirts() {
            const selectedSlangTerm = selectedSlang.textContent.replace('Slang Term: ', '');
            openTShirtPopup(selectedSlangTerm);
        }

        // Function to handle "Add Slang" button click
        function addSlang() {
            // Implement the logic to add slang (e.g., open a form)
            alert("Implement the logic to add slang here.");
        }

        // Open T-shirt popup
        function openTShirtPopup(slangTerm) {
            // Replace with logic to fetch T-shirt image
            const tShirtImage = '..shirts/' + slangTerm + '.jpg'; // Example placeholder

            tShirtPopup.style.display = 'flex';
            tShirtPopup.querySelector('img').src = tShirtImage;
        }

        // Close T-shirt popup
        function closeTShirtPopup() {
            tShirtPopup.style.display = 'none';
        }

        // Add an event listener for closing the popup
        closePopupButton.addEventListener('click', closeTShirtPopup);
        tShirtPopup.addEventListener('click', (event) => {
            if (event.target === tShirtPopup) {
                closeTShirtPopup();
            }
        });
    </script>
</section>



css
/* General styles */
body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
    background-color: #f5f5f5;
    color: #333;
}

main {
    padding: 20px;
    max-width: 900px;
    margin: 0 auto;
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

/* Search form styles */
#search-form {
    display: flex;
    align-items: center;
    gap: 10px;
    margin-bottom: 20px;
}

#search-input {
    padding: 12px;
    border: 1px solid #ddd;
    border-radius: 8px;
    background-color: #fff;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    transition: background-color 0.2s ease-in-out;
    outline: none;
}

#search-input:focus {
    background-color: #e5e5e5;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

button {
    background-color: #00D936;
    color: #fff;
    padding: 12px 24px;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    transition: transform 0.2s ease-in-out;
    font-weight: bold;
}

button:hover {
    transform: scale(1.05);
    background-color: #00c22f;
}

/* Slang list and definition styles */
#slang-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
}

.slang-item {
    display: inline-block;
    padding: 12px 24px;
    border: 1px solid #ddd;
    border-radius: 8px;
    margin: 8px;
    cursor: pointer;
    animation: bounce 0.5s ease-in-out;
    font-family: inherit;
}

.slang-item:hover {
    background-color: #f5f5f5;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.definition {
    display: none;
    position: absolute;
    top: 100%;
    left: 0;
    width: 250px;
    padding: 16px;
    background-color: #fff;
    border: 1px solid #ddd;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    opacity: 0;
    transition: opacity 0.2s ease-in-out;
}

.slang-item:active .definition {
    display: block;
    opacity: 1;
    transform: translateY(-5px);
}

/* T-shirt popup */
.t-shirt-popup {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.7);
    z-index: 100;
    animation: fade-in 0.3s ease-in-out;
}

.t-shirt-popup img {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    max-width: 80%;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.close-popup {
    position: absolute;
    top: 20px;
    right: 20px;
    padding: 8px 16px;
    background-color: #ddd;
    border: 1px solid #ddd;
    border-radius: 5px;
    cursor: pointer;
    font-weight: bold;
    opacity: 0.7;
}

.close-popup:hover {
    opacity: 1;
}

.cart-item {
    display: flex;
    border: 1px solid #ddd;
    border-radius: 8px;
    margin-top: 10px;
}

.cart-item-image {
    max-width: 100px;
    border-radius: 8px 0 0 8px;
}

.cart-item-dropdown {
    flex-grow: 1;
    padding: 10px;
}

.cart-item-tshirt {
    max-width: 150px;
}

